{"version":3,"file":"extension.js","mappings":"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","sources":["../.././src/web/utils.js","../../external commonjs \"vscode\"","../../webpack/bootstrap","../../webpack/runtime/define property getters","../../webpack/runtime/hasOwnProperty shorthand","../../webpack/runtime/make namespace object","../.././src/web/extension.ts"],"sourcesContent":["/**\n * 返回字符串打散后的小写字符数组\n * @param {string} text\n * @return {Array}\n */\nfunction getTextArray(text) {\n  const style = getStyle(text);\n  if (style === \"php\") {\n    return text.split(\"_\");\n  } else if (style === \"camel\") {\n    return text\n      .replace(/([A-Z])/g, \"_$1\")\n      .toLowerCase()\n      .split(\"_\");\n  } else if (style === \"pascal\") {\n    return text\n      .replace(/([A-Z])/g, \"_$1\")\n      .toLowerCase()\n      .split(\"_\")\n      .slice(1);\n  } else if (style === \"constant\") {\n    return text.split(\"_\").map((item) => item.toLowerCase());\n  } else if (style === \"kebab\") {\n    return text.split(\"-\");\n  } else {\n    return [text];\n  }\n}\nfunction getStyle(text) {\n  if (isCamel(text)) {\n    return \"camel\";\n  } else if (isPascal(text)) {\n    return \"pascal\";\n  } else if (isPhp(text)) {\n    return \"php\";\n  } else if (isConstant(text)) {\n    return \"constant\";\n  } else if (isKebab(text)) {\n    return \"kebab\";\n  } else {\n    return \"unknown\";\n  }\n}\nfunction isCamel(text) {\n  return text[0] === text[0].toLowerCase() && text !== text.toLowerCase();\n}\n\nfunction isPascal(text) {\n  return text[0] === text[0].toUpperCase() && !text.includes(\"_\");\n}\n\nfunction isPhp(text) {\n  return text[0] === text[0].toLowerCase() && text.includes(\"_\");\n}\n\nfunction isConstant(text) {\n  return text[0] === text[0].toUpperCase() && text.includes(\"_\");\n}\n\nfunction isKebab(text) {\n  return text.includes(\"-\");\n}\n/**\n * 转为驼峰式命名 textStyle\n * @param {string} text\n */\nfunction toCamelCase(text) {\n  if (isCamel(text)) {\n    return text;\n  } else {\n    return getTextArray(text)\n      .map((item, i) => {\n        if (i > 0) {\n          item = item[0].toUpperCase() + item.substr(1);\n          return item;\n        } else {\n          return item;\n        }\n      })\n      .join(\"\");\n  }\n}\n\n/**\n * 转为帕斯卡命名  TextStyle\n * @param {string} text\n */\nfunction toPascal(text) {\n  if (isPascal(text)) {\n    return text;\n  } else {\n    return getTextArray(text)\n      .map((item, i) => {\n        item = item[0].toUpperCase() + item.substr(1);\n        return item;\n      })\n      .join(\"\");\n  }\n}\n\n/**\n * 转为php风格命名  text_style\n * @param {string} text\n */\nfunction toPhp(text) {\n  if (isPhp(text)) {\n    return text;\n  } else {\n    return getTextArray(text).join(\"_\");\n  }\n}\n\n/**\n * 转为常量式命名 TEXT_STYLE\n * @param {string} text\n */\nfunction toConstant(text) {\n  if (isConstant(text)) {\n    return text;\n  } else {\n    return getTextArray(text).join(\"_\").toUpperCase();\n  }\n}\n\n/**\n * 转为中横线命名 text-style\n * @param {string} text\n */\nfunction toKebab(text) {\n  if (isKebab(text)) {\n    return text;\n  } else {\n    return getTextArray(text).join(\"-\");\n  }\n}\n\nexport default {\n  toCamelCase,\n  toPhp,\n  toConstant,\n  toPascal,\n  toKebab,\n};\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\n// @ts-ignore\nimport util from './utils';\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  console.log(\n    'Congratulations, your extension \"var-style\" is now active in the web extension host!'\n  );\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  let disposable1 = vscode.commands.registerCommand(\n    \"extension.camelStyle\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n      if (!editor) {\n        return;\n      }\n      // const selection = editor.selection\n      // get all the selections\n      const allSelections = editor.selections;\n\n      editor.edit((editBuilder) => {\n        allSelections.forEach((selection) => {\n          const text = editor.document.getText(selection);\n          editBuilder.replace(selection, util.toCamelCase(text));\n        });\n      });\n    }\n  );\n\n  let disposable2 = vscode.commands.registerCommand(\n    \"extension.phpStyle\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n      if (!editor) {\n        return;\n      }\n      const allSelections = editor.selections;\n\n      editor.edit((editBuilder) => {\n        allSelections.forEach((selection) => {\n          const text = editor.document.getText(selection);\n          console.log({ text });\n          editBuilder.replace(selection, util.toPhp(text));\n        });\n      });\n    }\n  );\n\n  let disposable3 = vscode.commands.registerCommand(\n    \"extension.constantStyle\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n      if (!editor) {\n        return;\n      }\n      const allSelections = editor.selections;\n\n      editor.edit((editBuilder) => {\n        allSelections.forEach((selection) => {\n          const text = editor.document.getText(selection);\n          editBuilder.replace(selection, util.toConstant(text));\n        });\n      });\n    }\n  );\n\n  let disposable4 = vscode.commands.registerCommand(\n    \"extension.pascalStyle\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n      if (!editor) {\n        return;\n      }\n      const allSelections = editor.selections;\n\n      editor.edit((editBuilder) => {\n        allSelections.forEach((selection) => {\n          const text = editor.document.getText(selection);\n          editBuilder.replace(selection, util.toPascal(text));\n        });\n      });\n    }\n  );\n  let disposable5 = vscode.commands.registerCommand(\n    \"extension.kebabStyle\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n      if (!editor) {\n        return;\n      }\n      const allSelections = editor.selections;\n\n      editor.edit((editBuilder) => {\n        allSelections.forEach((selection) => {\n          const text = editor.document.getText(selection);\n          editBuilder.replace(selection, util.toKebab(text));\n        });\n      });\n    }\n  );\n\n  context.subscriptions.push(disposable1);\n  context.subscriptions.push(disposable2);\n  context.subscriptions.push(disposable3);\n  context.subscriptions.push(disposable4);\n  context.subscriptions.push(disposable5);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["getTextArray","text","style","isCamel","isPascal","isPhp","isConstant","isKebab","getStyle","split","replace","toLowerCase","slice","map","item","toUpperCase","includes","toCamelCase","i","substr","join","toPhp","toConstant","toPascal","toKebab","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","context","console","log","disposable1","vscode","commands","registerCommand","editor","window","activeTextEditor","allSelections","selections","edit","editBuilder","forEach","selection","document","getText","disposable2","disposable3","disposable4","disposable5","subscriptions","push"],"sourceRoot":""}